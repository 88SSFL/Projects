from tkinter import *
from tkinter import messagebox
# leitura de arquivo
def testar_arquivo():
    try:
        arquivo_=open('arquivo.txt','r')
        b=arquivo_.read()
        arquivo_.close()
    except:
        arquivo_=open('arquivo.txt','w+')
        b=arquivo_.read()
        arquivo_.close()

def novo_arquivo():
    try:
        arquivo_ = open('arquivo.txt', 'r')
        arquivo_.close()
    except:
        arquivo_ = open('arquivo.txt', 'w+')
        arquivo_.close()
    arquivo_ = open('arquivo.txt', 'a')
    arquivo_.write(f'{bd[int(len(bd))-1][0]};{bd[int(len(bd))-1][1]}!')
    arquivo_.close()

def editar_arquivo():
    try:
        arquivo_ = open('arquivo.txt', 'r')
        b = arquivo_.read()
        arquivo_.close()
    except:
        arquivo_ = open('arquivo.txt', 'w+')
        b = arquivo_.read()
        arquivo_.close()
    arquivo_=open('arquivo.txt', 'w')
    for d in bd:
        arquivo_.write(f'{d[0]};{d[1]}!')
    arquivo_.close()



def ler_arquivo():
    testar_arquivo()
    c = open('arquivo.txt', 'r')
    b = c.read()
    dado_bruto = list()
    dado_semi_tratado = list()
    bd=list()
    for dado in b:
        if dado != '!' and dado != ';':
            dado_bruto.append(dado)
        elif dado == ';':
            h = ''.join(dado_bruto)
            dado_semi_tratado.append(h)
            dado_bruto = []
        elif dado == '!':
            h = ''.join(dado_bruto)
            dado_semi_tratado.append(int(h))
            bd.append(dado_semi_tratado)
            dado_bruto = []
            dado_semi_tratado=[]
    c.close()
    return bd
global bd
bd=ler_arquivo()

#final da leitura de arquivo
#Menu Editar

class Laabel:
    def __init__(self, width=0, text='', frame='', column=0, sticky=''):
        self.width = width
        self.text = StringVar()
        self.text.set(text)
        self.frame = frame
        self.column = column
        self.sticky = sticky
        self.label = Label(self.frame, bg='white', relief='solid', borderwidth=1, width=self.width,
                           textvariable=self.text)
        self.label.grid(row=1, column=self.column, sticky=self.sticky)

    def atualizacao(self, text):
        self.text.set(text)


def aplicar():
    if d5.get() != '':
        bd[int(aa2.get()) - 1][0] = d5.get()
    if d6.get() != '':
        bd[int(aa2.get()) - 1][1] = d6.get()
    bb4.atualizacao('')
    bb5.atualizacao('')
    bb6.atualizacao('')
    editar_arquivo()
    d.destroy()


def cancelar():
    bb4.atualizacao('')
    bb5.atualizacao('')
    bb6.atualizacao('')
    d.destroy()

def deletar_():
    if messagebox.askyesno(message= f' Tem certeza que quer deletar o cadastro número {aa2.get()} ?'):
       del bd[int(aa2.get())-1]
       editar_arquivo()
       editar_.destroy()

def editar_2():
    global d, d5, d6
    d = Toplevel()
    d.columnconfigure(0, minsize=20)
    d.columnconfigure(2, minsize=30)
    d.rowconfigure(0, minsize=30)
    d.rowconfigure(1, minsize=30)
    d.rowconfigure(4, minsize=40)
    d1 = Label(d, text=f'    Nome:   {bd[int(aa2.get()) - 1][0]}')
    d2 = Label(d, text=f'    Idade:   {bd[int(aa2.get()) - 1][1]}')
    d3 = Label(d, text='Novo Nome')
    d4 = Label(d, text='Nova Idade')
    d5 = Entry(d, width=30)
    d6 = Entry(d, width=5)
    d7 = Button(d, text='Aplicar', command=aplicar)
    d8 = Button(d, text='Cancelar', command=cancelar)
    d1.grid(row=0, column=0, columnspan=3, sticky='ws')
    d2.grid(row=1, column=0, columnspan=3, sticky='wn')
    d3.grid(row=2, column=0)
    d4.grid(row=3, column=0)
    d5.grid(row=2, column=1)
    d6.grid(row=3, column=1)
    d7.grid(row=4, column=1)
    d8.grid(row=4, column=1, sticky='e')


def procurar():
    if bd==[]:
        messagebox.showinfo(message='Cadastro Vazio')
    else:
        bb4.atualizacao(f'{aa2.get()}')
        bb5.atualizacao(f'{bd[int(aa2.get()) - 1][0]}')
        bb6.atualizacao(f'{bd[int(aa2.get()) - 1][1]}')
    c = Frame(editar_)
    c.rowconfigure(0, minsize=33)
    c.columnconfigure(1, minsize=70)
    cc1 = Button(c, text='Editar', command=editar_2)
    cc2 = Button(c, text='Deletar',command=deletar_)
    c.grid(row=3, column=1)
    cc1.grid(row=0, column=0, sticky='n')
    cc2.grid(row=0, column=1, sticky='n')


def voltar_2():
    editar_.destroy()


def editar():
    global editar_, bb4, bb5, bb6, bb7, aa2
    editar_ = Toplevel()
    editar_.title('Edição de Cadastro')
    editar_.columnconfigure(1, minsize=300)
    aa = Frame(editar_)
    aa.rowconfigure(1, minsize=50)
    aa.columnconfigure(1, min=50)
    aa.columnconfigure(2, min=70)
    aa1 = Label(aa, text="cód")
    aa2 = Entry(aa, width=3)
    aa3 = Button(aa, text="Procurar", command=procurar)
    aa.grid(row=1, column=1)
    aa1.grid(row=1, column=0)
    aa2.grid(row=1, column=1)
    aa3.grid(row=1, column=2, sticky='w')
    b = Frame(editar_)
    b.rowconfigure(2, minsize=40)
    b.columnconfigure(0, minsize=70)
    b.columnconfigure(2, minsize=70)
    bb1 = Label(b, text='Cod', bd=1, relief="raised", borderwidth=1, width=5)
    bb2 = Label(b, text='Nome', bd=1, relief="raised", borderwidth=1)
    bb3 = Label(b, text='Idade', bd=1, relief="raised", borderwidth=1, width=5)
    bb4 = Laabel(5, '', b, 0, 'ne')
    bb5 = Laabel(24, '', b, 1, 'n')
    bb6 = Laabel(5, '', b, 2, 'nw')
    bb7 = Button(b, text='Voltar', command=voltar_2)
    b.grid(row=2, column=0, columnspan=2)
    bb1.grid(row=0, column=0, sticky='nes')
    bb2.grid(row=0, column=1, sticky='new')
    bb3.grid(row=0, column=2, sticky='nws')
    bb7.grid(row=2, column=2)
    editar_.mainloop()


#Menu de Inclusão

def aplicar_novo():
    lista = list()
    lista.append(str(novo3.get()))
    lista.append(str(novo4.get()))
    bd.append(lista[:])
    novo_arquivo()
    novo.destroy()
    a.destroy()



def cancelar_novo():
    novo.destroy()


def novo_():
    global novo, novo3,novo4
    novo = Toplevel()
    novo.title('Inclusão de Entrada')
    novo.columnconfigure(0, minsize=50)
    novo.columnconfigure(2, minsize=70)
    novo.rowconfigure(0, minsize=45)
    novo.rowconfigure(1, minsize=30)
    novo.rowconfigure(2, minsize=40)
    novo1 = Label(novo, text='Novo Nome')
    novo2 = Label(novo, text='Nova Idade')
    novo3 = Entry(novo, width=30)
    novo4 = Entry(novo, width=5)
    novo5 = Button(novo, text='Aplicar', command=aplicar_novo)
    novo6 = Button(novo, text='Cancelar', command=cancelar_novo)
    novo1.grid(row=0, column=0, sticky='e')
    novo2.grid(row=1, column=0, sticky='e')
    novo3.grid(row=0, column=1)
    novo4.grid(row=1, column=1,sticky='w')
    novo5.grid(row=2, column=1,sticky='e')
    novo6.grid(row=2, column=2)

    # Menu cadastro
    
    #Parte 2 do menu do botão esquerdo do mouse
def opcoes(s):
    q.tk_popup(s.x_root, s.y_root, 0)

    # Fim daParte 2 do menu do botão esquerdo do mouse


def voltar_1():
    a.destroy()
    


def ver_cadastro():
    global a
    a=Tk()
    a.title('Visualização de Cadastro')
    c = Label(a, text='Pessoas Cadastradas no Sistema', font=('bold', 12))
    d=Label(a,text='Cod',bd=1,relief="raised",borderwidth=1)
    e=Label(a,text='Nome',bd=1,relief="raised",borderwidth=1)
    f=Label(a, text='Idade',bd=1,relief="raised",borderwidth=1)
    n=0
    final_range= 1 if bd==[] else len(bd)
    for h in range (0,final_range):
        l=Label(a,text=f'{h+1 if bd!=[]else ""}',bg='white',relief="solid",borderwidth=1,width=5)
        j=Label(a,text=f' {bd[h][0] if bd!=[]else ""}',bg='white',relief="solid",borderwidth=1,width=40,anchor='w')
        k=Label(a,text=f'{bd[h][1] if bd!=[]else ""}',bg='white',relief="solid",borderwidth=1,width=5)
        l.grid(row=h+2,column=1,sticky='news')
        j.grid(row=h + 2, column=2,sticky='news')
        k.grid(row=h + 2, column=3,sticky='news')
        l.bind('<Button-3>',opcoes)
        j.bind('<Button-3>', opcoes)
        k.bind('<Button-3>', opcoes)
        n+=1
    c_iii=Label(a,height=1)
    c_iv=Label(a,width=1)
    r= Button(a, text='Novo',width=10,command=novo_)
    m = Button(a, text='Voltar',command=voltar_1)
    c.grid(row=0,column=1,columnspan=3)
    d.grid(row=1, column=1,sticky='news')
    e.grid(row=1, column=2,sticky='news')
    f.grid(row=1, column=3,sticky='news')
    a.rowconfigure(n+3,minsize=20)
    a.rowconfigure(0,minsize=50)
    a.rowconfigure(n+5,minsize=20)
    a.columnconfigure(4,minsize=20)
    a.columnconfigure(0, minsize=20)
    m.grid(row=n+4,column=3)
    r.grid(row=n + 4, column=2,sticky='e')
    o = Menu(a)
    p = Menu(o, tearoff=0)
    o.add_cascade(label='Editar', menu=p)
    p.add_command(label='Alterar Nome/Idade',command=editar)
    p.add_command(label='Nova Entrada',command=novo_)
    p.add_command(label='Excluir Dado',command=editar)
    p.add_separator()
    p.add_command(label='Voltar',command=voltar_1)
    #menu do botão direito do mouse - parte 1
    global q
    q = Menu(a, tearoff=0)
    q.add_command(label='Alterar Nome/Idade',command=editar)
    q.add_command(label='Excluir Dado',command=editar)
    # fim da parte 1 do menu do botão direito do mouse
    a.config(menu=o)
    a.mainloop()

#Menu Principal
def sair():
    principal.destroy()


def principal_():
    global principal
    principal=Tk()
    principal.title('Cadastro LF')
    principal.geometry('1000x500')
    imagem=PhotoImage('Fundo.gif')
    fundo = Label(principal, image=imagem)
    fundo.place(x=0, y=0, relwidth=1, relheight=1)
    principal_1=Frame(principal)
    principal_2=Label(principal_1,text='MENU PRINCIPAL',font=('bold',15))
    principal_3=Button(principal_1,text='Ver Pessoas Cadastradas no Sistema',width=50,font=(10),command=ver_cadastro)
    principal_4 = Button(principal_1, text='Editar/Excluir Pessoas no sistema',width=50,font=(10),command=editar)
    principal_5 = Button(principal_1, text='Incluir Pessoas no Cadastro', width=50, font=(10), command=novo_)
    principal_6 = Button(principal_1, text='Sair do Sistema',width=50,font=(10),command=sair)
    principal.columnconfigure(0,minsize=130)
    principal_1.columnconfigure(0,minsize=700)
    principal_1.rowconfigure(0, minsize=10)
    principal_1.rowconfigure(5, minsize=50)
    principal_1.pack()
    principal_2.grid(row=1,column=0,sticky='n')
    principal_3.grid(row=2,column=0,sticky='n')
    principal_4.grid(row=3,column=0,sticky='n')
    principal_5.grid(row=4, column=0, sticky='n')
    principal_6.grid(row=5,column=0,sticky='n')
    principal.mainloop()

#Execução
principal_()
